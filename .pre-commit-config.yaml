# Ensure sequential execution to prevent SQLite lock issues
fail_fast: true

repos:
  # Debug hook for troubleshooting environment issues (can be disabled)
  - repo: local
    hooks:
      - id: debug-env
        name: Debug environment (for troubleshooting)
        language: system
        pass_filenames: false
        stages: [manual]
        entry: bash
        args:
          - -c
          - |
            echo "=== Pre-commit Environment Debug Info ===" > .git/precommit-debug.log
            echo "Date: $(date)" >> .git/precommit-debug.log
            echo "User: $(whoami)" >> .git/precommit-debug.log
            echo "PWD: $(pwd)" >> .git/precommit-debug.log
            echo "Git: $(command -v git) ($(git --version))" >> .git/precommit-debug.log
            echo "Python: $(command -v python || echo none) $(python -V 2>&1 || echo none)" >> .git/precommit-debug.log
            echo "Python3: $(command -v python3 || echo none) $(python3 -V 2>&1 || echo none)" >> .git/precommit-debug.log
            echo "VIRTUAL_ENV: ${VIRTUAL_ENV:-none}" >> .git/precommit-debug.log
            echo "PYENV_ROOT: ${PYENV_ROOT:-none}" >> .git/precommit-debug.log
            echo "PATH: $PATH" >> .git/precommit-debug.log
            echo "Git config:" >> .git/precommit-debug.log
            git config --show-origin -l | grep -E "hooksPath|autocrlf|eol" >> .git/precommit-debug.log || echo "No relevant git config found" >> .git/precommit-debug.log
            echo "Debug info written to .git/precommit-debug.log"
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.5.7
    hooks:
      - id: ruff
        args: ["--fix", "--line-length=125"]
        stages: [pre-commit]
      - id: ruff-format
        args: ["--line-length=125"]
        stages: [pre-commit]

  - repo: local
    hooks:
      - id: check-py-file-length
        name: Check Python file length (<= 500 lines)
        entry: python scripts/check_file_length.py --max-lines 500 --paths src tests
        language: system
        pass_filenames: false
        stages: [pre-commit]

  - repo: https://github.com/psf/black
    rev: 24.8.0
    hooks:
      - id: black
        args: ["--line-length=125"]
        stages: [pre-commit]

  - repo: local
    hooks:
      - id: mypy
        name: mypy
        entry: mypy
        language: system
        types: [python]
        args:
          - --config-file=pyproject.toml
          - --no-incremental
          - --cache-dir=/dev/null
          - --show-error-codes
          - --no-error-summary
          - --skip-version-check
        # Only run on changed files for faster pre-commit
        pass_filenames: true
        # Only check source files, not tests (tests are excluded in pyproject.toml)
        files: ^src/
        stages: [pre-commit]

  - repo: local
    hooks:
      - id: pytest
        name: Run tests with coverage
        entry: pytest tests/ -v --cov=src --cov-report=term-missing --cov-fail-under=90
        language: system
        pass_filenames: false
        stages: [pre-push]

  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.19
    hooks:
      - id: mdformat
        additional_dependencies:
          - mdformat-gfm
          - mdformat-frontmatter
        stages: [pre-commit]

  - repo: https://github.com/DavidAnson/markdownlint-cli2
    rev: v0.14.0
    hooks:
      - id: markdownlint-cli2
        stages: [pre-commit]
      
  - repo: https://github.com/codespell-project/codespell
    rev: v2.3.0
    hooks:
      - id: codespell
        args: ["--config", ".codespellrc"]
        stages: [pre-commit]

