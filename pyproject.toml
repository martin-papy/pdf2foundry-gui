[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyside6-app"
version = "0.1.0a1"
description = "PySide6 GUI application"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Your Name", email = "you@example.com" }]
license = { text = "MIT" }
dependencies = [
  "PySide6==6.9.2",
  "PySide6-stubs>=6.7.0",
  "pdf2foundry==0.1.0a1",
  "jsonschema>=4.0.0",
]

# Keep PyInstaller as a build extra (not required at runtime)
[project.optional-dependencies]
dev = [
  "PyInstaller==6.16.0",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "pytest-qt>=4.4.0",
  "mypy>=1.18.2",
  "ruff>=0.13.1",
  "black>=25.9.0",
  "pre-commit>=4.3.0",
  "codespell>=2.4.1",
  "mdformat>=0.7.22",
  "mdformat-gfm>=0.4.1",
  "mdformat-frontmatter>=2.0.8",
]

[project.scripts]
pyside6-app = "gui.main:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["gui*", "core*"]

[tool.pytest.ini_options]
addopts = "-v --cov=src --cov-report=term-missing --cov-fail-under=90"
testpaths = ["tests"]
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gui: marks tests that require GUI functionality",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/test_*",
    "src/gui/utils/*",  # Utility modules - will be tested when used
    "src/gui/dialogs/*",  # GUI dialogs - not yet fully tested
    "src/gui/widgets/*",  # GUI widgets - not yet fully tested
    "src/gui/main.py",  # Main entry point - not tested
    "src/gui/main_window.py",  # Main window - not yet fully tested
    "src/gui/conversion_handler.py",  # Conversion handler - not yet fully tested
    "src/core/config.py",  # Config module - not yet used
    "src/core/config_manager.py",  # Config manager - not yet used
    "src/core/preset_manager.py",  # Preset manager - not yet implemented
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "app.exec\\(\\)",
    "return app.exec\\(\\)",
    "raise SystemExit\\(",
]

[tool.black]
line-length = 125
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 125
target-version = "py310"

[tool.ruff.lint]
select = [
  "E","F","I","B","UP","C4","SIM","RUF"
]
ignore = ["ISC001"]

[tool.ruff.lint.isort]
known-first-party = ["gui", "core"]

[tool.mypy]
python_version = "3.12"
strict = true
warn_unused_configs = true
pretty = true
exclude = [
  "^tests/.*$"
]
# Performance optimizations for local development
sqlite_cache = true
cache_fine_grained = true
incremental = true
disallow_any_generics = false
follow_imports = "normal"
local_partial_types = true
skip_version_check = true
show_error_context = false

# PySide6 types are now provided by PySide6-stubs
